{"ast":null,"code":"var _jsxFileName = \"/Users/kieferslaton/doly-mern/src/components/TodoList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FaRegCircle, FaRegCheckCircle, FaRegTimesCircle } from 'react-icons/fa';\n\nconst TagForm = props => {\n  const [tag, setTag] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let tags = props.todo.tags;\n    tags.push(e.target.value);\n    console.log(tags);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add Tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst TodoList = props => {\n  const [todos, setTodos] = useState([]);\n  const [task, setTask] = useState(\"\");\n  useEffect(() => {\n    refreshTodos();\n  });\n\n  const refreshTodos = () => {\n    axios.get(`http://localhost:5000/todos/`).then(res => {\n      setTodos(res.data.filter(todo => todo.username === props.user.username));\n    });\n  };\n\n  const handleChange = e => {\n    setTask(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:5000/todos/add\", {\n      task,\n      username: props.user.username\n    }).then(res => console.log(res));\n    setTask(\"\");\n  };\n\n  const markComplete = todo => {\n    axios.post(`http://localhost:5000/todos/update/${todo._id}`, {\n      task: todo.task,\n      username: todo.username,\n      complete: !todo.complete\n    }).then(res => console.log(res));\n  };\n\n  const removeTask = id => {\n    axios.delete(`http://localhost:5000/todos/${id}`).then(res => console.log(res));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w-100\",\n    value: task,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center p-2\",\n    key: todo._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaRegCircle, {\n    size: 30,\n    className: `${todo.complete ? 'd-none' : ''} hover-change`,\n    onClick: () => markComplete(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 36\n    }\n  }), /*#__PURE__*/React.createElement(FaRegCheckCircle, {\n    size: 30,\n    className: `${todo.complete ? '' : 'd-none'} hover-change`,\n    onClick: () => markComplete(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 154\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${todo.complete ? 'complete' : ''} col-6`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, todo.task), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, todo.tags.map(tag => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, tag)), /*#__PURE__*/React.createElement(TagForm, {\n    todo: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaRegTimesCircle, {\n    size: 30,\n    className: \"hover-change\",\n    onClick: () => removeTask(todo._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 36\n    }\n  }))))));\n};\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/kieferslaton/doly-mern/src/components/TodoList.js"],"names":["React","useState","useEffect","axios","FaRegCircle","FaRegCheckCircle","FaRegTimesCircle","TagForm","props","tag","setTag","handleSubmit","e","preventDefault","tags","todo","push","target","value","console","log","TodoList","todos","setTodos","task","setTask","refreshTodos","get","then","res","data","filter","username","user","handleChange","post","markComplete","_id","complete","removeTask","id","delete","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {FaRegCircle, FaRegCheckCircle, FaRegTimesCircle} from 'react-icons/fa'\n\nconst TagForm = (props) => {\n    const [tag, setTag] = useState('');\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        let tags = props.todo.tags;\n        tags.push(e.target.value);\n        console.log(tags)\n    }\n\n    return(\n        <form onSubmit={handleSubmit} >\n            <input placeholder=\"Add Tag\" />\n        </form>\n    )\n}\n\nconst TodoList = (props) => {\n  const [todos, setTodos] = useState([]);\n  const [task, setTask] = useState(\"\");\n\n  useEffect(() => {\n    refreshTodos();\n  });\n\n  const refreshTodos = () => {\n    axios.get(`http://localhost:5000/todos/`).then((res) => {\n        setTodos(\n          res.data.filter((todo) => todo.username === props.user.username)\n        );\n      });\n  }\n\n  const handleChange = (e) => {\n    setTask(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios\n      .post(\"http://localhost:5000/todos/add\", {\n        task,\n        username: props.user.username,\n      })\n      .then((res) => console.log(res));\n    setTask(\"\");\n  };\n\n  const markComplete = (todo) => {\n      axios.post(`http://localhost:5000/todos/update/${todo._id}`, {\n          task: todo.task,\n          username: todo.username,\n          complete: !todo.complete\n      }).then(res => console.log(res));\n  }\n\n  const removeTask = (id) => {\n      axios.delete(`http://localhost:5000/todos/${id}`).then(res => console.log(res));\n  }\n\n  return (\n    <div className=\"container mt-1\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-12\">\n          <form onSubmit={handleSubmit}>\n            <input className=\"w-100\" value={task} onChange={handleChange} />\n          </form>\n        </div>\n      </div>\n      <div className=\"container mt-5\">\n        {todos.map((todo) => (\n          <div className=\"row justify-content-center p-2\" key={todo._id}>\n            <div className=\"col-1\"><FaRegCircle size={30} className={`${todo.complete ? 'd-none': ''} hover-change`} onClick={() => markComplete(todo)}/><FaRegCheckCircle size={30} className={`${todo.complete ? '': 'd-none'} hover-change`} onClick={() => markComplete(todo)}/></div>\n            <div className={`${todo.complete ? 'complete' : ''} col-6`}>{todo.task}</div>\n            <div className=\"col-4\">{todo.tags.map(tag => (\n                <div>{tag}</div>\n            ))}\n            <TagForm todo={todo} />\n            </div>\n            <div className=\"col-1\"><FaRegTimesCircle size={30} className='hover-change' onClick={() => removeTask(todo._id)} /></div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}