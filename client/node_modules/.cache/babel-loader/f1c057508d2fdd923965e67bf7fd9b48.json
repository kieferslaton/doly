{"ast":null,"code":"var _jsxFileName = \"/Users/kieferslaton/doly-mern/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nfunction App() {\n  const [user, setUser] = useState('');\n  const [users, setUsers] = useState([]);\n  const [usernames, setUsernames] = useState([]);\n  const [isLogin, setIsLogin] = useState(true);\n  const [loginUser, setLoginUser] = useState('');\n  const [loginPass, setLoginPass] = useState('');\n  const [loginUserError, setLoginUserError] = useState(false);\n  const [loginPassError, setLoginPassError] = useState(false);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/users/`).then(res => {\n      setUsers(res.data);\n      setUsernames(res.data.map(user => user.username));\n    });\n  }, []);\n\n  const handleLoginUserChange = e => {\n    setLoginUser(e.target.value);\n  };\n\n  const handleLoginPassChange = e => {\n    setLoginPass(e.target.value);\n  };\n\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n\n    if (!usernames.includes(loginUser)) {\n      setLoginUserError(true);\n    } else {\n      console.log(loginUser);\n    }\n  };\n\n  if (!user) {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, JSON.stringify(users)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, JSON.stringify(usernames)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row border justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setIsLogin(true),\n      className: `${isLogin ? 'btn-dark' : ''} btn w-25`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Log In\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setIsLogin(false),\n      className: `${isLogin ? '' : 'btn-dark'} btn w-25`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: `${isLogin ? '' : 'd-none'} my-4`,\n      onSubmit: handleLoginSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"loginUsername\",\n      onChange: handleLoginUserChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: `${loginUserError ? '' : 'd-none'} form-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Please enter a valid username.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"loginPassword\",\n      onChange: handleLoginPassChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"Log In\"))))));\n  } else {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Logged In\"));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kieferslaton/doly-mern/src/App.js"],"names":["React","useState","useEffect","axios","BrowserRouter","Router","Route","App","user","setUser","users","setUsers","usernames","setUsernames","isLogin","setIsLogin","loginUser","setLoginUser","loginPass","setLoginPass","loginUserError","setLoginUserError","loginPassError","setLoginPassError","get","then","res","data","map","username","handleLoginUserChange","e","target","value","handleLoginPassChange","handleLoginSubmit","preventDefault","includes","console","log","JSON","stringify"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './App.css';\n\nfunction App() {\n  const [user, setUser] = useState('');\n  const [users, setUsers] = useState([]);\n  const [usernames, setUsernames] = useState([]);\n  const [isLogin, setIsLogin] = useState(true);\n  const [loginUser, setLoginUser] = useState('');\n  const [loginPass, setLoginPass] = useState('');\n  const [loginUserError, setLoginUserError] = useState(false);\n  const [loginPassError, setLoginPassError] = useState(false);\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/users/`).then(res => {\n      setUsers(res.data);\n      setUsernames(res.data.map(user => user.username))\n    })\n  }, [])\n\n  const handleLoginUserChange = (e) => {\n    setLoginUser(e.target.value);\n  }\n\n  const handleLoginPassChange = (e) => {\n    setLoginPass(e.target.value);\n  }\n\n  const handleLoginSubmit = (e) => {\n    e.preventDefault();\n    if(!usernames.includes(loginUser)){\n      setLoginUserError(true)\n    } else {\n      console.log(loginUser)\n    }\n  }\n\n  if(!user) {\n  return (\n    <Router>\n      <p>{JSON.stringify(users)}</p>\n      <p>{JSON.stringify(usernames)}</p>\n      <div className=\"container\">\n        <div className=\"row border justify-content-center\">\n          <div className=\"col-6 text-center\">\n            <button onClick={() => setIsLogin(true)} className={`${isLogin ? 'btn-dark': ''} btn w-25`}>Log In</button>\n            <button onClick={() => setIsLogin(false)} className={`${isLogin ? '': 'btn-dark'} btn w-25`}>Sign Up</button>\n            <form className={`${isLogin ? '': 'd-none'} my-4`} onSubmit={handleLoginSubmit}>\n              <div className=\"form-group\">\n                <label>Username</label>\n                <input type=\"text\" className=\"form-control\" id=\"loginUsername\" onChange={handleLoginUserChange} />\n                <small className={`${loginUserError ? '': 'd-none'} form-text`}>Please enter a valid username.</small>\n              </div>\n              <div className=\"form-group\">\n                <label>Password</label>\n                <input type=\"password\" className=\"form-control\" id=\"loginPassword\" onChange={handleLoginPassChange} />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">Log In</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </Router>\n  )\n  } else {\n    return(\n      <Router>\n        <p>Logged In</p>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}